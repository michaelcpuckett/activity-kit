import { CoreObjectTypes, OrArray } from '../util';
import type { EntityReference } from '.';
import type { StringReferenceMap } from '../util/values';
import type { ImageReference } from '../Extended/ExtendedObject';
import type { LinkReference } from './Link';
import type { CollectionReference, OrderedCollectionReference } from '../Extended/Collection';
export type AnyCoreObjectType = (typeof CoreObjectTypes)[keyof typeof CoreObjectTypes];
export type CoreObjectProperties = {
    attachment?: OrArray<EntityReference>;
    attributedTo?: OrArray<EntityReference>;
    audience?: OrArray<EntityReference>;
    bcc?: OrArray<EntityReference>;
    bto?: OrArray<EntityReference>;
    cc?: OrArray<EntityReference>;
    content?: string;
    contentMap?: StringReferenceMap;
    context?: OrArray<EntityReference>;
    duration?: string;
    endTime?: Date;
    generator?: OrArray<EntityReference>;
    icon?: OrArray<ImageReference | LinkReference>;
    image?: OrArray<ImageReference | LinkReference>;
    inReplyTo?: OrArray<EntityReference>;
    location?: OrArray<EntityReference>;
    mediaType?: string;
    name?: string;
    nameMap?: StringReferenceMap;
    preview?: OrArray<EntityReference>;
    published?: Date;
    replies?: CollectionReference;
    startTime?: Date;
    summary?: string;
    summaryMap?: StringReferenceMap;
    tag?: OrArray<EntityReference>;
    to?: OrArray<EntityReference>;
    updated?: Date;
    url?: OrArray<LinkReference>;
    likes?: OrderedCollectionReference;
    shares?: OrderedCollectionReference;
    source?: {
        content?: string;
        contentMap?: StringReferenceMap;
    };
    sensitive?: boolean;
};
